#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
x-superset-image: &superset-image apache/superset:brigad
x-superset-volumes:
  &superset-volumes # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./docker:/app/docker
  - superset_home:/app/superset_home

version: "3.7"
networks:
  superset-default:
    name: superset_default
services:
  superset:
    env_file: docker/.env-non-dev
    image: *superset-image
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    volumes: *superset-volumes
    networks:
      superset-default: null
    healthcheck:
      test: curl --fail --silent "http://superset:8080/health" &> /dev/null || exit 1
      interval: 10s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.superset_app.rule=Host(`superset.brigad.tools`)"
      - "traefik.http.routers.superset_app.entrypoints=web"

  # superset-init:
  #   image: *superset-image
  #   container_name: superset_init
  #   command: ["/app/docker/docker-init.sh"]
  #   env_file: docker/.env-non-dev
  #   user: "root"
  #   volumes: *superset-volumes
  #   healthcheck:
  #     disable: true

  superset-worker-1:
    image: *superset-image
    container_name: superset_worker_1
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    user: "root"
    volumes: *superset-volumes
    networks:
      superset-default: null
    depends_on:
      - redis
    healthcheck:
      test: celery -A superset.tasks.celery_app:app inspect -d celery@$$HOSTNAME ping
      interval: 15s
      timeout: 20s
      start_period: 10s
      retries: 3
  
  superset-worker-2:
    image: *superset-image
    container_name: superset_worker_2
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    user: "root"
    volumes: *superset-volumes
    networks:
      superset-default: null
    depends_on:
      - redis
    healthcheck:
      test: celery -A superset.tasks.celery_app:app inspect -d celery@$$HOSTNAME ping
      interval: 15s
      timeout: 20s
      start_period: 10s
      retries: 3
  
  superset-worker-3:
    image: *superset-image
    container_name: superset_worker_3
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    user: "root"
    volumes: *superset-volumes
    networks:
      superset-default: null
    depends_on:
      - redis
    healthcheck:
      test: celery -A superset.tasks.celery_app:app inspect -d celery@$$HOSTNAME ping
      interval: 15s
      timeout: 20s
      start_period: 10s
      retries: 3
  
  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: docker/.env-non-dev
    restart: unless-stopped
    user: "root"
    volumes: *superset-volumes
    networks:
      superset-default: null
    healthcheck:
      disable: true
  
  redis:
    image: redis:latest
    container_name: superset_redis
    restart: unless-stopped
    networks:
      superset-default: null
    volumes:
      - redis:/data

volumes:
  superset_home:
    external: false
  redis:
    external: false
